!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
DockerClient	PwnMachine/PwnMachine.py	/^class DockerClient(docker.DockerClient):$/;"	c
EmptyPwnMachine	PwnMachine/PwnMachine.py	/^class EmptyPwnMachine:$/;"	c
PM_COMMENT	install.py	/^PM_COMMENT = "# PWN MACHINE"$/;"	v
PM_COMMENT_END	install.py	/^PM_COMMENT_END = "# PWN MACHINE END"$/;"	v
ParserError	PwnMachine/Config.py	/^class ParserError(Exception):$/;"	c
PluginLoader	cli.py	/^class PluginLoader(click.MultiCommand):$/;"	c
PwnMachine	PwnMachine/PwnMachine.py	/^class PwnMachine:$/;"	c
VERSION	PwnMachine/Config.py	/^VERSION = 1.1$/;"	v
__all__	PwnMachine/__init__.py	/^__all__ = ["PwnMachine", "utils"]$/;"	v
__all__	__init__.py	/^__all__ = ["cli", "PwnMachine", "__version__"]$/;"	v
__init__	PwnMachine/Config.py	/^    def __init__(self, msg, trail=None):$/;"	m	class:ParserError
__init__	PwnMachine/PwnMachine.py	/^    def __init__(self, api):$/;"	m	class:DockerClient
__init__	PwnMachine/PwnMachine.py	/^    def __init__(self, pm_path):$/;"	m	class:PwnMachine
__init__	cli.py	/^    def __init__(self, *plugin_folders):$/;"	m	class:PluginLoader
__str__	PwnMachine/Config.py	/^    def __str__(self):$/;"	m	class:ParserError	file:
__version__	__init__.py	/^    __version__ = f.read().strip()$/;"	v
_client	PwnMachine/PwnMachine.py	/^    _client = None$/;"	v	class:PwnMachine
_cmd	PwnMachine/PwnMachine.py	/^    _cmd = None$/;"	v	class:PwnMachine
_project	PwnMachine/PwnMachine.py	/^    _project = None$/;"	v	class:PwnMachine
_re_container_name	PwnMachine/Config.py	/^_re_container_name = r"[a-zA-Z0-9][a-zA-Z0-9_.-]*"$/;"	v
add	cli/dns.py	/^def add($/;"	f
apply_traefik_rule	PwnMachine/PwnMachine.py	/^    def apply_traefik_rule(self, service_name, service_config, rule_name):$/;"	m	class:PwnMachine
apply_traefik_rules	PwnMachine/PwnMachine.py	/^    def apply_traefik_rules(self):$/;"	m	class:PwnMachine
as_list	PwnMachine/Config.py	/^def as_list(obj):$/;"	f
ask_config_info	install.py	/^def ask_config_info():$/;"	f
assert_type	PwnMachine/Config.py	/^def assert_type(obj, valid_type):$/;"	f
backup	PwnMachine/PwnMachine.py	/^    def backup(self, volume_name):$/;"	m	class:PwnMachine
backup	cli/volume.py	/^def backup(volume_names):$/;"	f
base_plugin_folder	cli.py	/^base_plugin_folder = os.path.join(os.path.dirname(__file__), "cli")$/;"	v
build	PwnMachine/PwnMachine.py	/^    def build(self, service_names):$/;"	m	class:PwnMachine
build	cli/container.py	/^def build(container_names):$/;"	f
build	cli/service.py	/^def build(service_names):$/;"	f
check_call	PwnMachine/utils.py	/^def check_call(*args, **kwargs):$/;"	f
check_ns	install.py	/^def check_ns(domain, machine_ip):$/;"	f
check_output	PwnMachine/utils.py	/^def check_output(*args, **kwargs):$/;"	f
cli	cli/container.py	/^def cli():$/;"	f
cli	cli/dns.py	/^def cli():$/;"	f
cli	cli/service.py	/^def cli():$/;"	f
cli	cli/volume.py	/^def cli():$/;"	f
client	PwnMachine/PwnMachine.py	/^    def client(self):$/;"	m	class:PwnMachine
cmd	PwnMachine/PwnMachine.py	/^    def cmd(self):$/;"	m	class:PwnMachine
container_names	PwnMachine/PwnMachine.py	/^    def container_names(self):$/;"	m	class:PwnMachine
copy_skel	install.py	/^def copy_skel(pm_path):$/;"	f
default	cli/container.py	/^    default="all",$/;"	v
do_mount	PwnMachine/PwnMachine.py	/^        def do_mount(remote_path, local_path):$/;"	f	function:PwnMachine.mount
env	PwnMachine/PwnMachine.py	/^    def env(self):$/;"	m	class:PwnMachine
env	cli.py	/^def env():$/;"	f
exec	PwnMachine/PwnMachine.py	/^    def exec(self, service_name, command, privileged=False):$/;"	m	class:PwnMachine
exec	cli/container.py	/^def exec(container_names, command, privileged):$/;"	f
extra_env	PwnMachine/utils.py	/^def extra_env(*extra_env):$/;"	f
find_exposed	PwnMachine/Config.py	/^def find_exposed(compose):$/;"	f
find_first_match	cli.py	/^    def find_first_match(self, name):$/;"	m	class:PluginLoader
fixed_relative_context	PwnMachine/utils.py	/^def fixed_relative_context():$/;"	f
get	cli/dns.py	/^def get(path):$/;"	f
get_command	cli.py	/^    def get_command(self, ctx, name):$/;"	m	class:PluginLoader
get_container_names_for_services	PwnMachine/PwnMachine.py	/^    def get_container_names_for_services(self, service_names):$/;"	m	class:PwnMachine
get_domains	PwnMachine/Config.py	/^def get_domains(domain_list):$/;"	f
get_exec	PwnMachine/PwnMachine.py	/^    def get_exec(self, service_name, command):$/;"	m	class:PwnMachine
get_info_from_compose	PwnMachine/Config.py	/^def get_info_from_compose(compose_file):$/;"	f
get_ip	PwnMachine/Config.py	/^def get_ip(ip):$/;"	f
get_machine_ip	install.py	/^def get_machine_ip(machine_name):$/;"	f
get_machine_options	PwnMachine/utils.py	/^def get_machine_options(machine_name):$/;"	f
get_pm_offset	install.py	/^def get_pm_offset(content):$/;"	f
get_project	PwnMachine/PwnMachine.py	/^    def get_project(self, compose_files):$/;"	m	class:PwnMachine
get_regex	PwnMachine/Config.py	/^def get_regex(regex, str):$/;"	f
get_traefik_rules	PwnMachine/traefik.py	/^def get_traefik_rules(service_name, http_config, ssl=False):$/;"	f
get_trail	PwnMachine/Config.py	/^    def get_trail(self):$/;"	m	class:ParserError
get_typed_value	PwnMachine/Config.py	/^def get_typed_value(config, key, expected_type, required=True):$/;"	f
handler	PwnMachine/utils.py	/^    def handler(*args, **kwargs):$/;"	f	function:monkey_patch
help	cli/container.py	/^    help='Number of lines to show from the end of the logs (default "all")',$/;"	v
hl	PwnMachine/utils.py	/^def hl(color, s):$/;"	f
inner	PwnMachine/Config.py	/^        def inner(trail):$/;"	f	function:ParserError.get_trail
install_pwn_machine	install.py	/^def install_pwn_machine():$/;"	f
keep_error_trail	PwnMachine/Config.py	/^def keep_error_trail(name):$/;"	f
list_commands	cli.py	/^    def list_commands(self, ctx):$/;"	m	class:PluginLoader
logs	PwnMachine/PwnMachine.py	/^    def logs(self, service_names, follow, tail):$/;"	m	class:PwnMachine
logs	cli/container.py	/^def logs(container_names, f, tail):$/;"	f
logs	cli/service.py	/^def logs(service_names, f, tail):$/;"	f
lookup	install.py	/^    def lookup():$/;"	f	function:check_ns
ls	cli/container.py	/^def ls():$/;"	f
ls	cli/dns.py	/^def ls():$/;"	f
ls	cli/service.py	/^def ls():$/;"	f
ls	cli/volume.py	/^def ls():$/;"	f
machine_name	PwnMachine/PwnMachine.py	/^    def machine_name(self):$/;"	m	class:PwnMachine
main_cli	cli.py	/^def main_cli():$/;"	f
monkey_patch	PwnMachine/utils.py	/^def monkey_patch(module, method_name, replacement):$/;"	f
mount	PwnMachine/PwnMachine.py	/^    def mount(self, volume_name, mountpoint):$/;"	m	class:PwnMachine
mount	cli/volume.py	/^def mount(volume_name, mountpoint=None):$/;"	f
nargs	cli/container.py	/^    nargs=1,$/;"	v
new_from_env_file	PwnMachine/utils.py	/^    def new_from_env_file(original, *args, **kwargs):$/;"	f	function:extra_env
new_process_config_file	PwnMachine/utils.py	/^    def new_process_config_file(original, *args, **kwargs):$/;"	f	function:fixed_relative_context
parse	PwnMachine/Config.py	/^def parse(config_dir, config):$/;"	f
parse_basic_auth	PwnMachine/Config.py	/^def parse_basic_auth(domain):$/;"	f
parse_compose_project	PwnMachine/utils.py	/^def parse_compose_project(project_dir, machine_name, name, compose_files):$/;"	f
parse_config	PwnMachine/Config.py	/^def parse_config(config_dir, filename):$/;"	f
parse_domain	PwnMachine/Config.py	/^def parse_domain(domain_name, domain):$/;"	f
parse_domains	PwnMachine/Config.py	/^def parse_domains(domains):$/;"	f
parse_ip_list	PwnMachine/Config.py	/^def parse_ip_list(domain, type_name):$/;"	f
parse_service	PwnMachine/Config.py	/^def parse_service(config_dir, name, service):$/;"	f
parse_web	PwnMachine/Config.py	/^def parse_web(http, compose_file):$/;"	f
patch	cli/dns.py	/^def patch(path, data):$/;"	f
prepare_bash	install.py	/^def prepare_bash(pm_path):$/;"	f
prepare_zshrc	install.py	/^def prepare_zshrc(pm_path):$/;"	f
print_stream	PwnMachine/utils.py	/^def print_stream(stream):$/;"	f
project	PwnMachine/PwnMachine.py	/^    def project(self):$/;"	m	class:PwnMachine
ps	PwnMachine/PwnMachine.py	/^    def ps(self, services):$/;"	m	class:PwnMachine
ps	cli.py	/^    def ps(context, services):$/;"	f	function:ssh
re_auth	PwnMachine/Config.py	/^re_auth = re.compile(r"^(?P<login>[^:]+):(?P<hash>.+)$")$/;"	v
re_container_name	PwnMachine/Config.py	/^re_container_name = re.compile(f"^({_re_container_name})$")$/;"	v
re_container_name_port	PwnMachine/Config.py	/^re_container_name_port = re.compile($/;"	v
rebind	cli/dns.py	/^def rebind(zone, name, ips):$/;"	f
restart	PwnMachine/PwnMachine.py	/^    def restart(self, service_names, timeout=10):$/;"	m	class:PwnMachine
restart	cli/container.py	/^def restart(container_names, t):$/;"	f
restart	cli/service.py	/^def restart(service_names, t):$/;"	f
restore	cli/volume.py	/^def restore():$/;"	f
rm	cli/dns.py	/^def rm(zone, name, type):$/;"	f
send_request	cli/dns.py	/^def send_request(method, path, data=None):$/;"	f
service_names	PwnMachine/PwnMachine.py	/^    def service_names(self):$/;"	m	class:PwnMachine
setup	cli.py	/^def setup():$/;"	f
setup_only	cli.py	/^def setup_only():$/;"	f
slugify	PwnMachine/utils.py	/^def slugify(name):$/;"	f
ssh	PwnMachine/PwnMachine.py	/^    def ssh(self, args, get_output=False):$/;"	m	class:PwnMachine
ssh	cli.py	/^def ssh(command):$/;"	f
start	PwnMachine/PwnMachine.py	/^    def start(self, service_names):$/;"	m	class:PwnMachine
start	cli/container.py	/^def start(container_names):$/;"	f
start	cli/service.py	/^def start(service_names):$/;"	f
stop	PwnMachine/PwnMachine.py	/^    def stop(self, service_names, timeout=10):$/;"	m	class:PwnMachine
stop	cli/container.py	/^def stop(container_names, t):$/;"	f
stop	cli/service.py	/^def stop(service_names, t):$/;"	f
update_rc	install.py	/^def update_rc(file_path, lines):$/;"	f
update_rc_files	install.py	/^def update_rc_files(pm_path):$/;"	f
update_unknowrc	install.py	/^def update_unknowrc(pm_path):$/;"	f
version	cli.py	/^def version():$/;"	f
version_file	__init__.py	/^version_file = os.path.join(os.path.dirname(__file__), "version.txt")$/;"	v
volume_names	PwnMachine/PwnMachine.py	/^    def volume_names(self):$/;"	m	class:PwnMachine
volumes	PwnMachine/PwnMachine.py	/^    def volumes(self):$/;"	m	class:PwnMachine
write_default_config	install.py	/^def write_default_config(pm_path, config):$/;"	f
yaml_load	PwnMachine/Config.py	/^def yaml_load(filename):$/;"	f
